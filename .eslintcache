[{"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\index.js":"1","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\reportWebVitals.js":"2","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\App.js":"3","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\menuComponent.js":"4","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\shared\\dishes.js":"5","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\HeaderComponent.js":"8","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\FooterComponent.js":"9","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\HomeComponent.js":"10","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\MenuComponent.js":"11","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\ContactComponet.js":"12","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\shared\\comments.js":"13","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\shared\\leaders.js":"14","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\shared\\promotions.js":"15","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\AboutComponent.js":"16","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\redux\\configureStore.js":"17","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\redux\\comments.js":"18","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\redux\\dishes.js":"19","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\redux\\leaders.js":"20","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\redux\\promotions.js":"21","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\redux\\ActionCreators.js":"22","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\redux\\ActionTypes.js":"23","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\LoadingComponet.js":"24","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\redux\\forms.js":"25","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\shared\\baseUrl.js":"26"},{"size":618,"mtime":1609097507400,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":495,"mtime":1608854564537,"results":"30","hashOfConfig":"28"},{"size":817,"mtime":1608325969349,"results":"31","hashOfConfig":"28"},{"size":1614,"mtime":1608336928312,"results":"32","hashOfConfig":"28"},{"size":8083,"mtime":1609196896732,"results":"33","hashOfConfig":"28"},{"size":3612,"mtime":1609352775930,"results":"34","hashOfConfig":"28"},{"size":5091,"mtime":1608854564544,"results":"35","hashOfConfig":"28"},{"size":2813,"mtime":1608328151665,"results":"36","hashOfConfig":"28"},{"size":2142,"mtime":1609356127082,"results":"37","hashOfConfig":"28"},{"size":2183,"mtime":1609182854821,"results":"38","hashOfConfig":"28"},{"size":11184,"mtime":1609356134595,"results":"39","hashOfConfig":"28"},{"size":4926,"mtime":1608331225274,"results":"40","hashOfConfig":"28"},{"size":2432,"mtime":1608337007334,"results":"41","hashOfConfig":"28"},{"size":457,"mtime":1608331241727,"results":"42","hashOfConfig":"28"},{"size":5045,"mtime":1609356197652,"results":"43","hashOfConfig":"28"},{"size":810,"mtime":1609183834455,"results":"44","hashOfConfig":"28"},{"size":648,"mtime":1609190825540,"results":"45","hashOfConfig":"28"},{"size":624,"mtime":1609122016771,"results":"46","hashOfConfig":"28"},{"size":620,"mtime":1609301183161,"results":"47","hashOfConfig":"28"},{"size":644,"mtime":1609182457303,"results":"48","hashOfConfig":"28"},{"size":7090,"mtime":1609353143164,"results":"49","hashOfConfig":"28"},{"size":562,"mtime":1609351882688,"results":"50","hashOfConfig":"28"},{"size":260,"mtime":1609123287107,"results":"51","hashOfConfig":"28"},{"size":169,"mtime":1609175168830,"results":"52","hashOfConfig":"28"},{"size":47,"mtime":1609181381588,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"w4obpz",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\index.js",[],["114","115"],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\App.js",[],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\menuComponent.js",[],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\shared\\dishes.js",[],["116","117"],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\DishdetailComponent.js",["118","119","120"],"import React, { useState } from 'react';\r\nimport {\r\n    Card, CardBody, CardImg, CardText, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody,\r\n    Col, Row, Label\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponet';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nfunction CommentForm(props) {\r\n\r\n    const [isModalOpen, setisModalOpen] = useState(false)\r\n\r\n    const toggleModal = () => {\r\n        setisModalOpen(!isModalOpen);\r\n    }\r\n\r\n    const hadleSubmit = (values) => {\r\n\r\n        console.log(props);\r\n        props.postComment(props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Button outline onClick={toggleModal}>\r\n                <span className=\"fa fa-pencil fa-lg\"></span> Add Comment\r\n            </Button>\r\n            <Modal isOpen={isModalOpen}\r\n                toggle={toggleModal}>\r\n                <ModalHeader toggle={toggleModal}>Submit Comment</ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={(values) => hadleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"rating\" className=\"ml-2\">Rating</Label>\r\n\r\n                            <Control.select model=\".rating\"\r\n                                id=\"rating\"\r\n                                name=\"rating\"\r\n                                className=\"form-control m-2\">\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </Control.select>\r\n\r\n\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"author\" className=\"ml-2\">Your name</Label>\r\n\r\n                            <Control.text model=\".author\"\r\n                                id=\"author\"\r\n                                name=\"author\"\r\n                                className=\"form-control m-2\"\r\n                                placeholder=\"Author\"\r\n                                validators={{\r\n\r\n                                    required,\r\n                                    minLength: minLength(3),\r\n                                    maxLength: maxLength(15)\r\n                                }} />\r\n                            <Errors\r\n                                className=\"text-danger\"\r\n                                model=\".author\"\r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    minLength: ' Must be greater than 2 characters',\r\n                                    maxLength: ' Must be 15 characters or less'\r\n                                }}\r\n                            />\r\n                        </Row>\r\n\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"comment\" className=\"ml-2\">Comment</Label>\r\n                            <Control.textarea\r\n                                model=\".comment\"\r\n                                id=\"comment\"\r\n                                name=\"comment\"\r\n                                rows=\"6\"\r\n                                className=\"form-control m-2\"\r\n                                validators={{\r\n                                    required,\r\n                                }}>\r\n                            </Control.textarea>\r\n\r\n                            <Errors\r\n                                className=\"text-danger ml-2\"\r\n                                model=\".comment\"\r\n                                messages={{\r\n                                    required: \"requiered\"\r\n                                }}\r\n                            />\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={2}>\r\n                                <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </LocalForm>\r\n\r\n\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n\r\n    comments = comments.map((comment) => {\r\n        return (\r\n            <Fade in>\r\n                <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', {\r\n                        year: 'numeric',\r\n                        month: 'short',\r\n                        day: '2-digit'\r\n                    }).format(new Date(comment.date))}\r\n                    </p>\r\n                </li>\r\n            </Fade>\r\n\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <h4>Comments</h4>\r\n            <ul className=\"list-unstyled\">\r\n                <Stagger in>\r\n                    {comments}\r\n                </Stagger>\r\n            </ul>\r\n            <CommentForm dishId={dishId}\r\n                postComment={postComment} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n\r\n    if (props.dishesLoading) {\r\n        console.log('cargando');\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish == null) {\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/home'>Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/menu'>Menu</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>\r\n                            {props.dish.name}\r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id} />\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default DishDetail; ","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\MainComponent.js",["121"],"import React, { useEffect } from 'react';\r\nimport MenuComponent from './MenuComponent';\r\nimport HeaderComponent from './HeaderComponent';\r\nimport FooterComponent from './FooterComponent';\r\nimport HomeComponent from './HomeComponent'\r\nimport ContactComponent from './ContactComponet';\r\nimport DishDetail from './DishdetailComponent';\r\nimport AboutComponent from './AboutComponent';\r\n\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchComments, fetchDishes, fetchPromos, fetchLeader,postFeedBack } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\n\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\n\r\nconst mapStateProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedBack: (values) => dispatch(postFeedBack(values)),\r\n  fetchDishes: () => { dispatch(fetchDishes()) },\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n  fetchComments: () => { dispatch(fetchComments()) },\r\n  fetchPromos: () => { dispatch(fetchPromos()) },\r\n  fetchLeader: () => { dispatch(fetchLeader()) }\r\n});\r\n\r\nconst Main = (props) => {\r\n\r\n  useEffect(() => {\r\n    props.fetchDishes();\r\n    props.fetchLeader();\r\n    props.fetchComments();\r\n    props.fetchPromos();\r\n    \r\n  }, [])\r\n\r\n  const HomePage = () => {\r\n    return (\r\n      <HomeComponent dish={props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n        dishesLoading={props.dishes.isLoading}\r\n        dishesErrMess={props.dishes.errMess}\r\n        promotion={props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n        promosLoading={props.promotions.isLoading}\r\n        promosErrMess={props.promotions.errMess}\r\n        leader={props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n        leaderLoading = { props.leaders.isLoading }\r\n        leaderErrMess={props.leaders.errMess}\r\n      />\r\n\r\n    )\r\n  }\r\n\r\n  const DishWithId = ({ match }) => {\r\n    return (\r\n      <DishDetail dish={props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n        dishesLoading={props.dishes.isLoading}\r\n        errMess={props.dishes.errMess}\r\n        comments={props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n        commentsErrMess={props.comments.errMess}\r\n        postComment={props.postComment}\r\n\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n\r\n\r\n    <div>\r\n      <HeaderComponent />\r\n      <TransitionGroup>\r\n        <CSSTransition key={props.location.key} classNames=\"page\" timeout={300}>\r\n          <Switch>\r\n            <Route path=\"/home\" component={HomePage} />\r\n            <Route exact path=\"/contactus\" component={() => <ContactComponent resetFeedbackForm={props.resetFeedbackForm} postFeedBack={props.postFeedBack} />} />\r\n            <Route exact path=\"/menu\" component={() => <MenuComponent dishes={props.dishes} />} />\r\n            <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n            <Route exact path=\"/aboutus\" component={() => <AboutComponent leaders={props.leaders} />} />\r\n            <Redirect to=\"/home\" />\r\n          </Switch>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n      <FooterComponent />\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default withRouter(connect(mapStateProps, mapDispatchToProps)(Main));\r\n\r\n\r\n","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\ContactComponet.js",["122","123","124","125","126","127","128","129","130","131"],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\shared\\comments.js",[],["132","133"],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\shared\\leaders.js",[],["134","135"],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\redux\\configureStore.js",["136"],"import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from \"redux-thunk\";\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback:InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk/* , logger */)\r\n    );\r\n        \r\n    return store;\r\n}","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\redux\\comments.js",[],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\redux\\dishes.js",[],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\redux\\leaders.js",[],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\redux\\promotions.js",[],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\redux\\ActionCreators.js",["137"],"import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { actions } from 'react-redux-form';\r\n\r\n/*Actions */\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        Credential: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => console.log(response))\r\n        .catch(error => {\r\n            console.log('Post Comments', error.message);\r\n            alert('Your comment could not be posted\\n Errror:' + error.message)\r\n        })\r\n}\r\n\r\n/**POST FEEDBACK */\r\nexport const postFeedBack = (values/* firstName, lastName, telNum, email,check,feedback */) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: values.firstname,\r\n        lastname: values.lastname,\r\n        telnum: values.telnum,\r\n        email: values.email,\r\n        agree: values.agree,\r\n        contactType: values.contactType,\r\n        message: values.message\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        Credential: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('Post Comments', error.message);\r\n            alert('Your comment could not be posted\\n Errror:' + error.message)\r\n        })\r\n}\r\n\r\n\r\n/**ACTIONSSSS*********************** */\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeader = () => (dispatch) => {\r\n    dispatch(leadersLoading(true))\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADER_LOADING\r\n})\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADER,\r\n    payload: leaders\r\n})\r\n\r\nexport const leadersFailed = (errMess) => ({\r\n    action: ActionTypes.LEADER_FAILED,\r\n    payload: errMess\r\n})","C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\redux\\ActionTypes.js",[],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\components\\LoadingComponet.js",[],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\redux\\forms.js",[],"C:\\Users\\Andres\\Desktop\\Curso ReactJs\\confusion\\src\\shared\\baseUrl.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"138","replacedBy":"142"},{"ruleId":"140","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":43,"column":29,"nodeType":"146","endLine":46,"endColumn":62},{"ruleId":"144","severity":1,"message":"147","line":59,"column":29,"nodeType":"146","endLine":69,"endColumn":38},{"ruleId":"144","severity":1,"message":"148","line":84,"column":29,"nodeType":"146","endLine":92,"endColumn":36},{"ruleId":"149","severity":1,"message":"150","line":44,"column":6,"nodeType":"151","endLine":44,"endColumn":8,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":25},{"ruleId":"153","severity":1,"message":"157","line":4,"column":33,"nodeType":"155","messageId":"156","endLine":4,"endColumn":40},{"ruleId":"158","severity":1,"message":"159","line":62,"column":25,"nodeType":"146","endLine":62,"endColumn":67},{"ruleId":"144","severity":1,"message":"147","line":77,"column":37,"nodeType":"146","endLine":83,"endColumn":39},{"ruleId":"144","severity":1,"message":"147","line":99,"column":37,"nodeType":"146","endLine":107,"endColumn":39},{"ruleId":"144","severity":1,"message":"147","line":123,"column":37,"nodeType":"146","endLine":131,"endColumn":39},{"ruleId":"144","severity":1,"message":"147","line":149,"column":37,"nodeType":"146","endLine":157,"endColumn":39},{"ruleId":"144","severity":1,"message":"160","line":174,"column":45,"nodeType":"146","endLine":176,"endColumn":80},{"ruleId":"144","severity":1,"message":"145","line":182,"column":37,"nodeType":"146","endLine":185,"endColumn":67},{"ruleId":"144","severity":1,"message":"148","line":194,"column":37,"nodeType":"146","endLine":198,"endColumn":68},{"ruleId":"138","replacedBy":"161"},{"ruleId":"140","replacedBy":"162"},{"ruleId":"138","replacedBy":"163"},{"ruleId":"140","replacedBy":"164"},{"ruleId":"153","severity":1,"message":"165","line":8,"column":8,"nodeType":"155","messageId":"156","endLine":8,"endColumn":14},{"ruleId":"153","severity":1,"message":"157","line":3,"column":10,"nodeType":"155","messageId":"156","endLine":3,"endColumn":17},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],["166"],["167"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["168"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["166"],["167"],["166"],["167"],"'logger' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},"Update the dependencies array to be: [props]",{"range":"171","text":"172"},[1584,1586],"[props]"]